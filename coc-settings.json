{
	// Target to show hover information, default is floating window when possible.
	// diagnostic related configurations
	"diagnostic.enable": true,
	"diagnostic.level": "hint",
	"diagnostic.refreshOnInsertMode": true,
	"diagnostic.checkCurrentLine": false,
	"diagnostic.signOffset": 999999,
	"diagnostic.enableSign": true,
	"diagnostic.errorSign": "Ⓧ",
	"diagnostic.warningSign": "⚠",
	"diagnostic.infoSign": "Ⓘ",
	"diagnostic.hintSign": "Ⓗ",
	"diagnostic.enableHighlightLineNumber": false,
	"diagnostic.virtualText": false,
	"diagnostic.virtualTextPrefix": "⎧Msg⎭❱ ",

	// completion related configuration
	"suggest.enablePreview": true,
	"suggest.floatEnable": true,
	"suggest.autoTrigger": "always",
	"suggest.echodocSupport": false,

	"coc.preferences.previewAutoClose": true,
	"coc.preferences.hoverTarget": "float",
	"coc.preferences.colorSupport": true,
	"coc.preferences.enableFloatHighlight": true,

	"codeLens.enable": true,
	"codeLens.separator": "‣",

	// Explorer
	"explorer.toggle": true,
	"explorer.focus": true,
	"explorer.activeMode": true,
	"explorer.file.autoReveal": true,
	"explorer.position": "left",
	"explorer.width": 30,
	"explorer.file.tabCD": true,
	"explorer.buffer.tabOnly": true,
	"explorer.previewAction.onHover": true,
	"explorer.icon.enableNerdfont": true,
	"explorer.filename.colored.enable": true,

	// Make vim select first item on completion
	"suggest.noselect": true,

	// LSP Configurations
	// coc-Prettier configuration
	"prettier.tabWidth": 4,
	"prettier.useTabs": true,

	// spell checker configuration
	"cSpell.showStatus": true,
	"cSpell.enabledLanguageIds": [
		"vim",
		"asciidoc",
		"c",
		"cpp",
		"csharp",
		"css",
		"git-commit",
		"go",
		"handlebars",
		"haskell",
		"html",
		"jade",
		"java",
		"javascript",
		"javascriptreact",
		"json",
		"jsonc",
		"latex",
		"tex",
		"plaintex",
		"less",
		"markdown",
		"rst",
		"pandoc",
		"php",
		"plaintext",
		"pug",
		"python",
		"restructuredtext",
		"rust",
		"scala",
		"scss",
		"text",
		"typescript",
		"typescriptreact",
		"yaml",
		"yml"
	],

	// TabNine Configurations for AI code completion
	"tabnine.shortcut": "TN",

	// Python
	"python.pythonPath": "python3",
	"python.analysis.autoImportCompletions": true,
	"python.analysis.autoSearchPaths": true,
	"python.analysis.diagnosticMode": "openFilesOnly",
	"python.formatting.provider": "black",
	"python.formatting.blackPath": "black",
	"python.formatting.blackArgs": [],
	"python.linting.enabled": true,
	"python.linting.pylintEnabled": true,

	// Latex
	"latex.build.executable": "latexmk",
	"latex.build.args": [
		"-cd",
		"-pdf",
		"-interaction=nonstopmode",
		"-synctex=1",
		"%f"
	],
	// Use this for the packages that need lualatex engine
	//"latex.build.args": [
	//	"-cd",
	//	"-lualatex",
	//	"-interaction=nonstopmode",
	//	"-synctex=1"
	//],
	"latex.build.onSave": true,
	"latex.lint.onSave": true,
	"latex.lint.onChange": true,
	"latex.forwardSearch.executable": "/usr/bin/zathura",
	"latex.forwardSearch.args": ["--synctex-forward", "%l:1:%f", "%p"],

	// C/C++/Objective-C
	"clangd.enabled": true,
	"clangd.checkUpdates": true,
	"clangd.semanticHighlighting": true,
	"clangd.path": "/bin/clangd-11",

	// Manual Settings
	"languageserver": {
		// HDL
		"hdlChecker": {
			// First run "pip3 install hdl-checker --user --upgrade"
			"command": "hdl_checker",
			"args": ["--lsp"],
			"filetypes": ["vhdl", "verilog", "systemverilog"]
		}
	}
}
